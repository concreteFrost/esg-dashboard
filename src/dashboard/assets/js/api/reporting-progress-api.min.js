

$(document).ready(() => {
    const access_token = localStorage.getItem('access_token')
    $.ajax({
        url: ' https://data.esg-one.uk/esg1-api/api/GetReportingProgress?id=1',
        method: "GET",
        headers: {
            Authorization: 'Bearer ' + access_token,
            "Content-Type": "application/json"
        },
        success: function (data) {

            console.log('success on reporting progress', data);
            const groupedData = breakByStandardsAndStatus(data);
            applyFormula(groupedData)

            Object.entries(groupedData).forEach(([key, val]) => populateList(key, val))
            $('#readiness-list-item').remove()
        },
        error: function (e) {
            console.log('error getting kpis api:', e)
        }
    })
})

function breakByStandardsAndStatus(arr) {
    return arr.reduce((group, data) => {
        const { ReportingStandard, Status } = data;
        group[ReportingStandard] = group[ReportingStandard] ?? { complete: [], incomplete: [] };
        const statusGroup = Status === 'Complete' ? 'complete' : 'incomplete';
        group[ReportingStandard][statusGroup].push(data);

        return group;
    }, {});
}

function applyFormula(arr) {
    for (const reportingStandard in arr) {
        const { complete, incomplete } = arr[reportingStandard];
        const totalComplete = complete.reduce((sum, obj) => sum + obj.Count, 0) ?? 0;
        const totalIncomplete = incomplete.reduce((sum, obj) => sum + obj.Count, 0) ?? 0;
        let formula = (totalComplete / (totalComplete + totalIncomplete)) * 100;

        formula = isNaN(formula) ? 0 : formula.toFixed(2);
        arr[reportingStandard].result = formula;

    }

}

function populateList(keyName, values) {

    const listElement = $('#readiness-list-item').clone();
    listElement.removeAttr('id');
    listElement.find('#readiness-name').text(keyName)
    listElement.find("#readiness-complete-percents").text(`(${values.result}%)`)
    listElement.find('#readiness-complete-bar').attr('aria-valuenow', values.result);
    listElement.find('#readiness-complete-bar').css(`width`, values.result + "%")
    listElement.find('#readiness-complete-bar').css('background-color', applyBarColor(values.result))
    const listParentElemet = $('#readiness-list');
    listParentElemet.append(listElement);


}

function applyBarColor(result) {
    if (result < 25) {
        return '#f54242'
    }
    else if (result >= 25 && result < 50) {
        return '#f57842'
    }
    else if (result >= 50 && result < 75) {
        return '#42b3f5'
    }
    else {
        return '#46eb4f'
    }
}


