var VectorMap = new jvm.Map({
  container: $('#world-map'),
  map: 'world_mill',
  zoomOnScroll: true,
  normalizeFunction: 'polynomial',
  hoverOpacity: 1,
  hoverColor: !1,
  backgroundColor: '#fafafa',
  commonAnnotationSettings: {
    tooltipEnabled: true
},
  regionStyle: {
    initial: {
      fill: '#dae9f7',
    },
    hover: { fill: '#1864AD', 'fill-opacity': 0.8, cursor: 'pointer' },
    selected: { fill: '#0C4E9D' },
    selectedHover: { fill: '#1864AD' },
  },
  markerStyle: {
    initial: { fill: '#F49986', 'stroke-width': 0 },
    hover: { fill: '#0C4E9D', 'stroke-width': 0 },
  },
  markers: [],
  series: {
    regions: [{
      attribute: 'fill'
  }]
  },
  onRegionTipShow: function(e, el, code){
    console.log(e)
  }
});

var table = $('#locations-list').DataTable({
  dom: 'Bfrltp',
  language: {
    paginate: {
      previous: "<i class='fas fa-angle-left'>",
      next: "<i class='fas fa-angle-right'>",
    },
    lengthMenu: 'Display _MENU_',
  },
  buttons: [
    {
      extend: 'collection',
      text: 'Show columns',
      columns: '.colhead',
      className: 'btn-outline-primary btn-sm ',
      buttons: ['columnsVisibility'],
      visibility: !0,
    },
    {
      extend: 'print',
      className: 'btn-datatable btn-sm',
    },
    {
      extend: 'pdf',
      className: 'btn-datatable btn-sm',
    },
    {
      extend: 'excel',
      className: 'btn-datatable btn-sm',
    },
    {
      extend: 'copy',
      className: 'btn-datatable btn-sm',
    },
  ],
});

$(document).find('.jvectormap-zoomin').addClass('btn btn-sm btn-primary');
$(document).find('.jvectormap-zoomout').addClass('btn btn-sm btn-primary');

$(document).ready(() => {
  if (location.pathname.endsWith('locations.html')) {
    $('#locations-view-all').hide();
    $('#manage-locations-btn').removeClass('d-none');
    $('#locations').addClass('col-12');
    $('#locations-list').removeClass('d-none');
  } else {
    table.destroy();
  }
});

$.ajax({
  setup,
  success: function (data) {
    $.ajax({
      url: 'https://europe.grc1.com/iGRC/api/Office/Get?tenantName=ESG-ONE',
      method: 'GET',
      headers: {
        Authorization: 'BEARER ' + data.access_token,
      },

      success: function (data2) {
        data2.forEach((d) => {
          $.ajax({
            url:
              'https://restcountries.com/v3.1/alpha/' + d.Country.CountryCode,
            method: 'GET',
            success: function (countryInfo) {
              VectorMap.addMarker(
                countryInfo[0].name.common,
                countryInfo[0].latlng,
              );
             
              var btns = ` <button class="btn btn-primary btn-sm" onclick="editLocation(this)">Edit</button>
              <button class="btn btn-danger btn-sm" onclick="removeLocation(this)">Delete</button>`;

              table.row.add([
                `<img src="${countryInfo[0].flags.png}" width="40px">`,
                d.Country.CountryName,
                d.OfficeName,
                d.Country.CurrencyCode,
                d.IsCurrent ? 'yes' : 'no',
                btns,
              ]);
              table.draw();
            },
          });
        });
      },
    });
  },
});

//Open Manage locations window
$('#manage-locations-btn').on('click', () => {
  $('#new-location').removeClass('d-none');
  $('#save-loaction-changes-btn').addClass('d-none');
  $('#save-new-location-btn').removeClass('d-none');
  $.ajax({
    url: 'https://restcountries.com/v3.1/all',
    method: 'GET',

    success: function (data) {
      $('#new-location').empty();
      data.sort(function (a, b) {
        var name1 = a.name.common.toUpperCase();
        var name2 = b.name.common.toUpperCase();
        return name1 < name2 ? -1 : name1 > name2 ? 1 : 0;
      });
      data.forEach((element) => {
        let name = element.name.common;
        let cca2 = element.cca2;
        $('#new-location').append(`<option value=${cca2}>${name}</option>`);
      });
    },
    error: function (e) {
      console.log(e);
    },
  });
});

//Add new location to list
$('#save-new-location-btn').click(() => {
  $.ajax({
    url:
      'https://restcountries.com/v2/alpha/' +
      $('#new-location option:selected').val(),
    method: 'GET',
    success: function (data) {
      console.log(data);
      var btns = ` <button class="btn btn-primary btn-sm" onclick="editLocation(this)">Edit</button>
      <button class="btn btn-danger btn-sm" onclick="removeLocation(this)">Delete</button>`;
      table.row.add([
        `<img src="${data.flags.png}" width="40px">`,
        data.name,
        data.alpha2Code,
        data.currencies[0].name,
        $('#isActive').is(':checked') ? 'yes' : 'no',
        btns,
      ]);
      VectorMap.addMarker(
       data.name,
        data.latlng
      );
      table.draw();
      $('#locationsModalCenter').modal('hide')
    },
  });
});

//Remove existing location
function removeLocation(e) {
  $(e).closest('tr').remove();
}

//Save changes to existing location
$('#save-loaction-changes-btn').click(() => {
  $('#locationsModalCenter').modal('hide');
  editable_branch.html($('#branches').val());
  localStorage.setItem('locations list', $('#locations-list').html());
});

//Show/hide message if list is empty
$(document).on('DOMSubtreeModified', () => {
  $('#country-table-body').children().length > 0
    ? $('#no-locations').addClass('d-none')
    : $('#no-locations').removeClass('d-none');
});

//Open edit location window
function editLocation(e) {
  $('#locationsModalTitle').html('Edit location');
  $('#save-loaction-changes-btn').removeClass('d-none');
  $('#save-new-location-btn').addClass('d-none');
  $('#new-location').addClass('d-none');
  let country = $(e).closest('.row').children('div:eq(1)').find('h5').html();
  let branches = $(e).closest('.row').children('div:eq(2)').find('h5').html();

  $('#locationsModalCenter').modal('show');
  $('#branches').val(branches);
  $('#new-location option:selected').val(country);

  editable_branch = $(e).closest('.row').children('div:eq(2)').find('h5');
}
