
$(document).ready(() => {
    fetchCards();
})

function fetchCards() {
    const access_token = localStorage.getItem('access_token')
    $.ajax({
        url: 'https://data.esg-one.uk/esg1-api/api/GetKPIs?Id=1',
        method: "GET",
        headers: {
            Authorization: 'Bearer ' + access_token,
            "Content-Type": "application/json"
        },
        success: function (data) {
            console.log('success on kpis', data);

            const splittedData = splitByFour(data);
            splittedData.forEach(function (chunk) {
                populateCardTemplate(chunk)
            })

            $('#kpis-sort-cards').find('.carousel-item:first').addClass('active')
            $('#template-card').remove()

        },
        error: function (e) {
            console.log('error getting kpis api:', e)
        }
    })
}

function splitByFour(arr) {
    const res = []

    for (let i = 0; i < arr.length; i += 4) {
        if (arr[i].Active)
            res.push(arr.slice(i, i + 4));
    }

    return res;
}

function populateCardTemplate(cardData) {
    const newCarouselElement = $('<div class="carousel-item"></div>')
    const row = $('<div class="kpi-cards-container"></div>')
    newCarouselElement.append(row);

    for (let i = 0; i < cardData.length; i++) {

        // Clone the card template
        const cardElement = $('#template-card').clone();

        // Remove the ID attribute from the cloned card element
        cardElement.removeAttr('id');

        // Set the title, info, and numbers using the unique identifiers
        setElementText(cardData[i].Name, cardElement.find('#kpi-card-name'))
        setElementText(cardData[i].Info ? `Info: ${cardData[i].Info}` : null, cardElement.find('#kpi-card-info'))

        setElementText(cardData[i].Value ? `Value: ${cardData[i].Value.toLocaleString('en', { useGrouping: true })}` : null, cardElement.find('#kpi-card-value'))
        setElementText(cardData[i].Unit ? `Unit: (${cardData[i].Unit})` : null, cardElement.find('#kpi-card-unit'))

        //Apply Icon
        cardElement.find('#kpi-card-icon').html(applyIcon(cardData[i]));

        // Set the target info using the unique identifier
        const targetInfoElement = cardElement.find('#target-info');
        setTargetInfo(cardData[i].Target, cardData[i].TargetType, cardData[i].Value, cardElement, targetInfoElement)

        const col = $('<div class="kpi-card-item"></div>');
        // Append the populated card to the desired container
        col.append(cardElement);
        row.append(col);

    }
    $('#kpis-sort-cards').append(newCarouselElement)


}

function applyIcon(cardData) {
    let icon;

    switch (cardData.IconRef) {
        case "Earth":
            icon = $('<i class="ni ni-world-2"></i>')
            break;
        case "Person":
            icon = $('<i class="ni ni-circle-08"></i>')
            break;
        case "Money":
            icon = $('<i class="ni ni-money-coins"></i>');
            break;
        default:
            icon = $('<i class="ni ni-fat-remove"></i>');
    }

    return icon;
}

function setTargetInfo(target, targetType, value, cardHtmlElement, targetHtmlElement) {

    if (!target) {
        cardHtmlElement.find("#target-info").addClass('invisible')
        return
    }

    let res;
    let classToAdd;
    let arrowToShow;

    value < target ? res = 100 - ((value / target) * 100) : res = (value - target) / target * 100;

    const formattedNumber = res.toFixed(2);

    if (targetType === "Above") {
        classToAdd = 'text-danger';
        arrowToShow = '<i class="fa fa-arrow-down"></i>';
    }
    else {
        classToAdd = 'text-success';
        arrowToShow = '<i class="fa fa-arrow-up"></i>';
    }
    cardHtmlElement.find('#kpi-card-target-info').addClass(classToAdd);
    targetHtmlElement.html(arrowToShow + formattedNumber + "%");

}

function setElementText(value, elementID) {
    value ? elementID.text(value) : elementID.addClass('d-none');
}
