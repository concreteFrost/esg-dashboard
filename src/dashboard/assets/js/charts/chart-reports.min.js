var cities = [
  'New York City,NY',
  'Los Angeles,CA',
  'Chicago,IL',
  'Houston,TX',
  'Philadelphia,PA',
];
var percentage = [45.8, 29.2, 8.3, 8.3, 8.3];
new Chart('regional-performance-bar', {
  type: 'horizontalBar',

  data: {
    labels: cities,
    datasets: [
      {
        data: percentage,
      },
    ],
  },
  options: {
    scales: {
      yAxes: [
        {
          ticks: {
            fontSize: 15,
          },
        },
      ],
    },
    indexAxis: 'y',
    elements: {
      bar: {
        borderWidth: 2,
      },
    },
    responsive: true,
    plugins: {
      legend: {
        position: 'right',
      },
      title: {
        display: true,
        text: 'Chart.js Horizontal Bar Chart',
      },
    },
  },
});

new Chart('regional-performance-pie', {
  type: 'doughnut',
  data: {
    labels: cities,
    datasets: [
      {
        data: percentage,
        backgroundColor: [
          'rgb(255, 99, 132)',
          'rgb(54, 162, 235)',
          'rgb(255, 205, 86)',
          'rgb(0, 255, 120)',
          'rgb(0, 255, 255)',
        ],
      },
    ],
  },
  options: {
    cutoutPercentage: 50,
    legend: {
      display: 'true',
      position: 'right',
    },
    responsive: true,
    plugins: {
      labels: {
        // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'
        render: 'value',
        // font size, default is defaultFontSize
        fontSize: 15,

        // font color, can be color array for each data or function for dynamic color, default is defaultFontColor
        fontColor: 'black',

        // font style, default is defaultFontStyle
        fontStyle: 'normal',

        // font family, default is defaultFontFamily
        fontFamily: "'Verdana",

        // draw label in arc, default is false
        // bar chart ignores this
        arc: true,

        // position to draw label, available value is 'default', 'border' and 'outside'
        // bar chart ignores this
        // default is 'default'
        position: 'default',

        // draw label even it's overlap, default is true
        // bar chart ignores this
        overlap: true,

        // show the real calculated percentages from the values and don't apply the additional logic to fit the percentages to 100 in total, default is false
        showActualPercentages: true,

        // add padding when position is `outside`
        // default is 2
        outsidePadding: 4,

        // add margin of text when position is `outside` or `border`
        // default is 2
        textMargin: 4,
      },
    },
  },
});

var labels = ['Environmental', 'Social', 'Governance'];
var values = [40, 25, 35];

new Chart('regional-performance-esg', {
  type: 'horizontalBar',

  data: {
    labels: labels,
    datasets: [
      {
        data: values,
        backgroundColor: '#228bc1',
      },
    ],
  },
  options: {
    responsive: true,
    scales: {
      yAxes: [
        {
          ticks: {
            fontSize: 20,
          },
        },
      ],
    },
  },
});
