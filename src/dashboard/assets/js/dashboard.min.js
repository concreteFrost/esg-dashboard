/*
 =========================================================
 esg:one Dashboard Application
 =========================================================
 @license Copyright 2021 Beathamm Ltd (https://esg-one.co)
 @author  22 Digital Ltd (https://22digital.ltd)
 @author  Justin Hartman <code@22digital.ltd>
*/
var $jscomp = {
  scope: {},
  findInternal: function (a, b, d) {
    a instanceof String && (a = String(a));
    for (var c = a.length, e = 0; e < c; e++) {
      var g = a[e];
      if (b.call(d, g, e, a)) return { i: e, v: g };
    }
    return { i: -1, v: void 0 };
  },
};
$jscomp.defineProperty =
  'function' == typeof Object.defineProperties
    ? Object.defineProperty
    : function (a, b, d) {
        if (d.get || d.set)
          throw new TypeError('ES3 does not support getters and setters.');
        a != Array.prototype && a != Object.prototype && (a[b] = d.value);
      };
$jscomp.getGlobal = function (a) {
  return 'undefined' != typeof window && window === a
    ? a
    : 'undefined' != typeof global && null != global
    ? global
    : a;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function (a, b, d, c) {
  if (b) {
    d = $jscomp.global;
    a = a.split('.');
    for (c = 0; c < a.length - 1; c++) {
      var e = a[c];
      e in d || (d[e] = {});
      d = d[e];
    }
    a = a[a.length - 1];
    c = d[a];
    b = b(c);
    b != c &&
      null != b &&
      $jscomp.defineProperty(d, a, {
        configurable: !0,
        writable: !0,
        value: b,
      });
  }
};
$jscomp.polyfill(
  'Array.prototype.find',
  function (a) {
    return a
      ? a
      : function (a, d) {
          return $jscomp.findInternal(this, a, d).v;
        };
  },
  'es6-impl',
  'es3'
);
var Layout = (function () {
  function a() {
    $('.sidenav-toggler').addClass('active');
    $('.sidenav-toggler').data('action', 'sidenav-unpin');
    $('body')
      .removeClass('g-sidenav-hidden')
      .addClass('g-sidenav-show g-sidenav-pinned');
    $('body').append(
      '<div class="backdrop d-xl-none" data-action="sidenav-unpin" data-target=' +
        $('#sidenav-main').data('target') +
        ' />'
    );
    Cookies.set('sidenav-state', 'pinned');
  }
  function b() {
    $('.sidenav-toggler').removeClass('active');
    $('.sidenav-toggler').data('action', 'sidenav-pin');
    $('body').removeClass('g-sidenav-pinned').addClass('g-sidenav-hidden');
    $('body').find('.backdrop').remove();
    Cookies.set('sidenav-state', 'unpinned');
  }
  $('.navbar-main .dropdown').on('hide.bs.dropdown', function () {
    var a = $(this).find('.dropdown-menu');
    a.addClass('close');
    setTimeout(function () {
      a.removeClass('close');
    }, 200);
  });
  $('.dropdown-submenu > .dropdown-toggle').click(function (a) {
    a.preventDefault();
    $(this).parent('.dropdown-submenu').toggleClass('show');
  });
  $('.nav-item.dropdown').hover(
    function () {
      $(this).addClass('show');
      $(this).find('.dropdown-menu').addClass('show');
      $(this).find('.dropdown-toggle').attr('aria-expanded', 'true');
    },
    function () {
      $(this).removeClass('show');
      $(this).find('.dropdown-menu').removeClass('show');
      $(this).find('.dropdown-toggle').attr('aria-expanded', 'false');
    }
  );
  $('.dropdown').click(function () {
    $(this).hasClass('show')
      ? ($(this).removeClass('show'),
        $(this).find('.dropdown-menu').removeClass('show'),
        $(this).find('.dropdown-toggle').attr('aria-expanded', 'false'))
      : ($(this).addClass('show'),
        $(this).find('.dropdown-menu').addClass('show'),
        $(this).find('.dropdown-toggle').attr('aria-expanded', 'true'));
  });
  $('.dropdown-menu a.dropdown-toggle').on('click', function (a) {
    a = $(this);
    var c = $(this).offsetParent('.dropdown-menu');
    $(this).next().hasClass('show') ||
      $(this)
        .parents('.dropdown-menu')
        .first()
        .find('.show')
        .removeClass('show');
    $(this).next('.dropdown-menu').toggleClass('show');
    $(this).closest('a').toggleClass('open');
    $(this)
      .parents('a.dropdown-item.dropdown.show')
      .on('hidden.bs.dropdown', function (a) {
        $('.dropdown-menu .show').removeClass('show');
      });
    c.parent().hasClass('navbar-nav') ||
      a.next().css({ top: a[0].offsetTop, left: c.outerWidth() - 4 });
    return !1;
  });
  var d = Cookies.get('sidenav-state')
    ? Cookies.get('sidenav-state')
    : 'pinned';
  1200 < $(window).width() &&
    ('pinned' == d && a(),
    'unpinned' == Cookies.get('sidenav-state') && b(),
    $(window).resize(function () {
      $('body').hasClass('g-sidenav-show') &&
        !$('body').hasClass('g-sidenav-pinned') &&
        $('body').removeClass('g-sidenav-show').addClass('g-sidenav-hidden');
    }));
  1200 > $(window).width() &&
    ($('body').removeClass('g-sidenav-hide').addClass('g-sidenav-hidden'),
    $('body').removeClass('g-sidenav-show'),
    $(window).resize(function () {
      $('body').hasClass('g-sidenav-show') &&
        !$('body').hasClass('g-sidenav-pinned') &&
        $('body').removeClass('g-sidenav-show').addClass('g-sidenav-hidden');
    }));
  $('body').on('click', '[data-action]', function (c) {
    c.preventDefault();
    c = $(this);
    var d = c.data('action');
    c.data('target');
    switch (d) {
      case 'sidenav-pin':
        a();
        break;
      case 'sidenav-unpin':
        b();
        break;
      case 'search-show':
        c.data('target');
        $('body')
          .removeClass('g-navbar-search-show')
          .addClass('g-navbar-search-showing');
        setTimeout(function () {
          $('body')
            .removeClass('g-navbar-search-showing')
            .addClass('g-navbar-search-show');
        }, 150);
        setTimeout(function () {
          $('body').addClass('g-navbar-search-shown');
        }, 300);
        break;
      case 'search-close':
        c.data('target'),
          $('body').removeClass('g-navbar-search-shown'),
          setTimeout(function () {
            $('body')
              .removeClass('g-navbar-search-show')
              .addClass('g-navbar-search-hiding');
          }, 150),
          setTimeout(function () {
            $('body')
              .removeClass('g-navbar-search-hiding')
              .addClass('g-navbar-search-hidden');
          }, 300),
          setTimeout(function () {
            $('body').removeClass('g-navbar-search-hidden');
          }, 500);
    }
  });
  $('.sidenav').on('mouseenter', function () {
    $('body').hasClass('g-sidenav-pinned') ||
      $('body')
        .removeClass('g-sidenav-hide')
        .removeClass('g-sidenav-hidden')
        .addClass('g-sidenav-show');
  });
  $('.sidenav').on('mouseleave', function () {
    $('body').hasClass('g-sidenav-pinned') ||
      ($('body').removeClass('g-sidenav-show').addClass('g-sidenav-hide'),
      setTimeout(function () {
        $('body').removeClass('g-sidenav-hide').addClass('g-sidenav-hidden');
      }, 300));
  });
  $(window).on('load resize', function () {
    800 > $('body').height() &&
      ($('body').css('min-height', '100vh'),
      $('#footer-main').addClass('footer-auto-bottom'));
  });
})();
('use strict');
var Charts = (function () {
  function a() {
    var a = {
      defaults: {
        global: {
          responsive: !0,
          maintainAspectRatio: !1,
          defaultColor: f.gray[600],
          defaultFontColor: f.gray[600],
          defaultFontFamily: h.base,
          defaultFontSize: 13,
          layout: { padding: 0 },
          legend: {
            display: !1,
            position: 'bottom',
            labels: { usePointStyle: !0, padding: 16 },
          },
          elements: {
            point: { radius: 0, backgroundColor: f.theme.primary },
            line: {
              tension: 0.4,
              borderWidth: 4,
              borderColor: f.theme.primary,
              backgroundColor: f.transparent,
              borderCapStyle: 'rounded',
            },
            rectangle: { backgroundColor: f.theme.warning },
            arc: {
              backgroundColor: f.theme.primary,
              borderColor: f.white,
              borderWidth: 4,
            },
          },
          tooltips: { enabled: !0, mode: 'index', intersect: !1 },
        },
        doughnut: {
          cutoutPercentage: 83,
          legendCallback: function (a) {
            var c = a.data,
              d = '';
            c.labels.forEach(function (a, b) {
              var e = c.datasets[0].backgroundColor[b];
              d += '<span class="chart-legend-item">';
              d +=
                '<i class="chart-legend-indicator" style="background-color: ' +
                e +
                '"></i>';
              d += a;
              d += '</span>';
            });
            return d;
          },
        },
      },
    };
    Chart.scaleService.updateScaleDefaults('linear', {
      gridLines: {
        borderDash: [2],
        borderDashOffset: [2],
        color: f.gray[300],
        drawBorder: !1,
        drawTicks: !1,
        drawOnChartArea: !0,
        zeroLineWidth: 0,
        zeroLineColor: 'rgba(0,0,0,0)',
        zeroLineBorderDash: [2],
        zeroLineBorderDashOffset: [2],
      },
      ticks: {
        beginAtZero: !0,
        padding: 10,
        callback: function (a) {
          if (!(a % 10)) return a;
        },
      },
    });
    Chart.scaleService.updateScaleDefaults('category', {
      gridLines: { drawBorder: !1, drawOnChartArea: !1, drawTicks: !1 },
      ticks: { padding: 20 },
    });
    return a;
  }
  function b(a, c) {
    for (var d in c) 'object' !== typeof c[d] ? (a[d] = c[d]) : b(a[d], c[d]);
  }
  function d(a, c) {
    for (var b in c)
      Array.isArray(c[b])
        ? c[b].forEach(function (c) {
            a[b].push(c);
          })
        : d(a[b], c[b]);
  }
  function c(a, d) {
    for (var b in d)
      Array.isArray(d[b])
        ? d[b].forEach(function (c) {
            a[b].pop();
          })
        : c(a[b], d[b]);
  }
  function e(a, c) {
    if (void 0 !== a.data('prefix') || void 0 !== a.data('prefix')) {
      var d = a.data('prefix') ? a.data('prefix') : '',
        b = a.data('suffix') ? a.data('suffix') : '';
      c.options.scales.yAxes[0].ticks.callback = function (a) {
        if (!(a % 10)) return d + a + b;
      };
      c.options.tooltips.callbacks.label = function (a, c) {
        var e = c.datasets[a.datasetIndex].label || '',
          g = a.yLabel,
          f = '';
        1 < c.datasets.length &&
          (f += '<span class="popover-body-label mr-auto">' + e + '</span>');
        return (f +=
          '<span class="popover-body-value">' + d + g + b + '</span>');
      };
    }
  }
  var g = $('[data-toggle="chart"]'),
    h = { base: 'Open Sans' },
    f = {
      gray: {
        100: '#f6f9fc',
        200: '#e9ecef',
        300: '#dee2e6',
        400: '#ced4da',
        500: '#adb5bd',
        600: '#8898aa',
        700: '#525f7f',
        800: '#32325d',
        900: '#212529',
      },
      theme: {
        default: '#172b4d',
        primary: '#5e72e4',
        secondary: '#f4f5f7',
        info: '#11cdef',
        success: '#2dce89',
        danger: '#f5365c',
        warning: '#fb6340',
        esg_one: '#0c4e9d',
        esg_two: '#1864ad',
        esg_three: '#3c7bc5',
        esg_four: '#228bc1',
        esg_five: '#1ba2c1',
        esg_six: '#33b5b3',
        esg_seven: '#5dbfc2',
        esg_eight: '#72c5c9',
        esg_dark: '#8f9292',
        esg_muted: '#434343',
        esg_peach: '#f49986',
        esg_orange: '#e77b65',
        esg_burnt: '#d2553c',
        esg_terracotta: '#c13113',
      },
      black: '#12263F',
      white: '#FFFFFF',
      transparent: 'transparent',
    };
  window.Chart && b(Chart, a());
  g.on({
    change: function () {
      var a = $(this);
      if (a.is('[data-add]')) {
        var b = a.data('add'),
          e = $(a.data('target')).data('chart');
        a.is(':checked') ? d(e, b) : c(e, b);
        e.update();
      }
    },
    click: function () {
      var a = $(this);
      if (a.is('[data-update]')) {
        var c = a.data('update'),
          d = $(a.data('target')).data('chart');
        b(d, c);
        e(a, d);
        d.update();
      }
    },
  });
  return { colors: f, fonts: h, mode: 'light' };
})();
('use strict');
var CopyIcon = (function () {
  function a(a) {
    a.tooltip().on('mouseleave', function () {
      a.tooltip('hide');
    });
    new ClipboardJS('.btn-icon-clipboard').on('success', function (a) {
      $(a.trigger)
        .attr('title', 'Copied!')
        .tooltip('_fixTitle')
        .tooltip('show')
        .attr('title', 'Copy to clipboard')
        .tooltip('_fixTitle');
      a.clearSelection();
    });
  }
  var b = $('.btn-icon-clipboard');
  b.length && a(b);
})();
('use strict');
var Navbar = (function () {
    function a(a) {
      var c = a.find('.dropdown-menu');
      c.addClass('close');
      setTimeout(function () {
        c.removeClass('close');
      }, 200);
    }
    var b = $('.navbar-nav, .navbar-nav .nav'),
      d = $('.navbar .collapse'),
      c = $('.navbar .dropdown');
    d.on({
      'show.bs.collapse': function () {
        var a = $(this);
        a.closest(b).find(d).not(a).collapse('hide');
      },
    });
    c.on({
      'hide.bs.dropdown': function () {
        a($(this));
      },
    });
  })(),
  NavbarCollapse = (function () {
    $('.navbar-nav');
    var a = $('.navbar .navbar-custom-collapse');
    a.length &&
      (a.on({
        'hide.bs.collapse': function () {
          a.addClass('collapsing-out');
        },
      }),
      a.on({
        'hidden.bs.collapse': function () {
          a.removeClass('collapsing-out');
        },
      }));
  })();
('use strict');
var Popover = (function () {
  var a = $('[data-toggle="popover"]'),
    b = '';
  a.length &&
    a.each(function () {
      var a = $(this);
      a.data('color') && (b = 'popover-' + a.data('color'));
      a.popover({
        trigger: 'focus',
        template:
          '<div class="popover ' +
          b +
          '" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
      });
    });
})();
('use strict');
var ScrollTo = (function () {
  var a = $('.scroll-me, [data-scroll-to], .toc-entry a');
  if (a.length)
    a.on('click', function (a) {
      var d = $(this);
      a = d.attr('href');
      d = d.data('scroll-to-offset') ? d.data('scroll-to-offset') : 0;
      a = { scrollTop: $(a).offset().top - d };
      $('html, body').stop(!0, !0).animate(a, 600);
      event.preventDefault();
    });
})();
('use strict');
var Tooltip = (function () {
  var a = $('[data-toggle="tooltip"]');
  a.length && a.tooltip();
})();
('use strict');
var Checklist = (function () {
  function a(a) {
    a.find('.checklist-entry input[type="checkbox"]').each(function () {
      b($(this));
    });
  }
  function b(a) {
    a.is(':checked')
      ? a.closest('.checklist-item').addClass('checklist-item-checked')
      : a.closest('.checklist-item').removeClass('checklist-item-checked');
  }
  var d = $('[data-toggle="checklist"]');
  d.length &&
    (d.each(function () {
      a($(this));
    }),
    d.find('input[type="checkbox"]').on('change', function () {
      b($(this));
    }));
})();
('use strict');
var FormControl = (function () {
    function a(a) {
      a.on('focus blur', function (a) {
        $(this)
          .parents('.form-group')
          .toggleClass('focused', 'focus' === a.type);
      }).trigger('blur');
    }
    var b = $('.form-control');
    b.length && a(b);
  })(),
  $map = $('#map-default'),
  map,
  lat,
  lng,
  color = '#5e72e4';
function initMap() {
  map = document.getElementById('map-default');
  lat = map.getAttribute('data-lat');
  lng = map.getAttribute('data-lng');
  var a = new google.maps.LatLng(lat, lng);
  map = new google.maps.Map(map, {
    zoom: 12,
    scrollwheel: !1,
    center: a,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
  });
  var b = new google.maps.Marker({
      position: a,
      map: map,
      animation: google.maps.Animation.DROP,
      title: 'Hello World!',
    }),
    d = new google.maps.InfoWindow({
      content:
        '<div class="info-window-content"><h2>esg:one Dashboard</h2><p>Visualising ESG data for brands.</p></div>',
    });
  google.maps.event.addListener(b, 'click', function () {
    d.open(map, b);
  });
}
$map.length && google.maps.event.addDomListener(window, 'load', initMap);
$map = $('#map-custom');
color = '#5e72e4';
function initMap() {
  map = document.getElementById('map-custom');
  lat = map.getAttribute('data-lat');
  lng = map.getAttribute('data-lng');
  var a = new google.maps.LatLng(lat, lng);
  map = new google.maps.Map(map, {
    zoom: 12,
    scrollwheel: !1,
    center: a,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    styles: [
      {
        featureType: 'administrative',
        elementType: 'labels.text.fill',
        stylers: [{ color: '#444444' }],
      },
      {
        featureType: 'landscape',
        elementType: 'all',
        stylers: [{ color: '#f2f2f2' }],
      },
      {
        featureType: 'poi',
        elementType: 'all',
        stylers: [{ visibility: 'off' }],
      },
      {
        featureType: 'road',
        elementType: 'all',
        stylers: [{ saturation: -100 }, { lightness: 45 }],
      },
      {
        featureType: 'road.highway',
        elementType: 'all',
        stylers: [{ visibility: 'simplified' }],
      },
      {
        featureType: 'road.arterial',
        elementType: 'labels.icon',
        stylers: [{ visibility: 'off' }],
      },
      {
        featureType: 'transit',
        elementType: 'all',
        stylers: [{ visibility: 'off' }],
      },
      {
        featureType: 'water',
        elementType: 'all',
        stylers: [{ color: color }, { visibility: 'on' }],
      },
    ],
  });
  var b = new google.maps.Marker({
      position: a,
      map: map,
      animation: google.maps.Animation.DROP,
      title: 'Hello World!',
    }),
    d = new google.maps.InfoWindow({
      content:
        '<div class="info-window-content"><h2>esg:one Dashboard</h2><p>Visualising ESG data for brands.</p></div>',
    });
  google.maps.event.addListener(b, 'click', function () {
    d.open(map, b);
  });
}
('use strict');
var BarStackedChart = (function () {
  function a(a) {
    var c = function () {
        return Math.round(100 * Math.random());
      },
      c = {
        labels: ['2018', '2019', '2020'],
        datasets: [
          {
            label: 'Environment',
            backgroundColor: Charts.colors.theme.esg_one,
            data: [c(), c(), c()],
          },
          {
            label: 'Social',
            backgroundColor: Charts.colors.theme.esg_four,
            data: [c(), c(), c()],
          },
          {
            label: 'Governance',
            backgroundColor: Charts.colors.theme.esg_eight,
            data: [c(), c(), c()],
          },
        ],
      },
      c = new Chart(a, {
        type: 'bar',
        data: c,
        options: {
          tooltips: { mode: 'index', intersect: !1 },
          responsive: !0,
          scales: { xAxes: [{ stacked: !0 }], yAxes: [{ stacked: !0 }] },
        },
      });
    a.data('chart', c);
  }
  var b = $('#chart-risk-comparison');
  b.length && a(b);
})();
('use strict');
var DoughnutChart = (function () {
  function a(a) {
    var c = function () {
        return Math.round(100 * Math.random());
      },
      c = new Chart(a, {
        type: 'doughnut',
        data: {
          labels: ['Danger', 'Warning', 'Success', 'Primary', 'Info'],
          datasets: [
            {
              data: [c(), c(), c(), c(), c()],
              backgroundColor: [
                Charts.colors.theme.danger,
                Charts.colors.theme.warning,
                Charts.colors.theme.success,
                Charts.colors.theme.primary,
                Charts.colors.theme.info,
              ],
              label: 'Dataset 1',
            },
          ],
        },
        options: {
          responsive: !0,
          legend: { position: 'top' },
          animation: { animateScale: !0, animateRotate: !0 },
        },
      });
    a.data('chart', c);
  }
  var b = $('#chart-doughnut');
  b.length && a(b);
})();
('use strict');
var PieChart = (function () {
  function a(a) {
    var c = function () {
        return Math.round(100 * Math.random());
      },
      c = new Chart(a, {
        type: 'pie',
        data: {
          labels: [
            'GHG Emissions',
            'Water Management',
            'Human Capital',
            'Environment',
            'Governance',
          ],
          datasets: [
            {
              data: [c(), c(), c(), c(), c()],
              backgroundColor: [
                Charts.colors.theme['esg-two'],
                Charts.colors.theme['esg-three'],
                Charts.colors.theme['esg-four'],
                Charts.colors.theme['esg-five'],
                Charts.colors.theme['esg-six'],
              ],
              label: 'Sector Percentile',
            },
          ],
        },
        options: {
          responsive: !0,
          legend: { position: 'top' },
          animation: { animateScale: !0, animateRotate: !0 },
        },
      });
    a.data('chart', c);
  }
  var b = $('#chart-pie');
  b.length && a(b);
})();
('use strict');
var PointsChart = (function () {
  var a = $('#chart-points');
  if (a.length) {
    var b = new Chart(a, {
      type: 'line',
      options: {
        scales: {
          yAxes: [
            {
              gridLines: {
                color: Charts.colors.gray[200],
                zeroLineColor: Charts.colors.gray[200],
              },
              ticks: {},
            },
          ],
        },
      },
      data: {
        labels: '2014 2015 2016 2017 2018 2019 2020 2021'.split(' '),
        datasets: [
          {
            label: 'Performance',
            data: [10, 18, 28, 23, 28, 40, 36, 46, 52],
            pointRadius: 10,
            pointHoverRadius: 15,
            showLine: !1,
          },
        ],
      },
    });
    a.data('chart', b);
  }
})();
('use strict');
var SalesChart = (function () {
  var a = $('#chart-sales-dark');
  if (a.length) {
    var b = new Chart(a, {
      type: 'line',
      options: {
        scales: {
          yAxes: [
            {
              gridLines: {
                color: Charts.colors.gray[700],
                zeroLineColor: Charts.colors.gray[700],
              },
              ticks: {},
            },
          ],
        },
      },
      data: {
        labels: '2014 2015 2016 2017 2018 2019 2020 2021'.split(' '),
        datasets: [
          {
            label: 'Risk',
            data: [
              19.77, 20.19, 9.76, 30.22, 15.45, 40.38, 28.41, 49.65, 49.65,
            ],
          },
        ],
      },
    });
    a.data('chart', b);
  }
})();
('use strict');
var SalesChart = (function () {
    var a = $('#chart-risk-analysis');
    if (a.length) {
      var b = new Chart(a, {
        type: 'line',
        options: {
          scales: {
            yAxes: [
              {
                gridLines: {
                  color: Charts.colors.gray[200],
                  zeroLineColor: Charts.colors.gray[200],
                },
                ticks: {},
              },
            ],
          },
        },
        data: {
          labels: ['2018', '2019', '2020'],
          datasets: [{ label: 'Risk Analysis', data: [12.77, 27.19, 9.76] }],
        },
      });
      a.data('chart', b);
    }
  })(),
  BarsChart = (function () {
    var a = $('#chart-raw-scores');
    if (a.length) {
      var b = new Chart(a, {
        type: 'bar',
        data: {
          labels: ['2018', '2019', '2020'],
          datasets: [
            {
              label: 'Raw (KT)',
              data: [21.99, 17.87, 29.51],
              backgroundColor: Charts.colors.theme.esg_two,
              barThickness: 'flex',
            },
          ],
        },
      });
      a.data('chart', b);
    }
  })();
('use strict');
var LineChart = (function () {
  var a = $('#chart-line');
  if (a.length) {
    var b = new Chart(a, {
      type: 'line',
      options: {
        scales: {
          yAxes: [
            {
              gridLines: {
                color: Charts.colors.gray[200],
                zeroLineColor: Charts.colors.gray[200],
              },
              ticks: {},
            },
          ],
        },
      },
      data: {
        labels: '2014 2015 2016 2017 2018 2019 2020 2021'.split(' '),
        datasets: [
          {
            label: 'Performance',
            data: [
              7.33, 19.13, 12.22, 28.59, 15.48, 42.01, 22.39, 60.37, 60.37,
            ],
          },
        ],
      },
    });
    a.data('chart', b);
  }
})();
if ($('[data-toggle="widget-calendar"]')[0]) {
  $('[data-toggle="widget-calendar"]').fullCalendar({
    contentHeight: 'auto',
    theme: !1,
    buttonIcons: { prev: ' ni ni-bold-left', next: ' ni ni-bold-right' },
    header: { right: 'next', center: 'title, ', left: 'prev' },
    defaultDate: '2021-04-06',
    editable: !0,
    events: [
      {
        title: 'Call with Dave',
        start: '2021-04-18',
        end: '2021-04-18',
        className: 'bg-red',
      },
      {
        title: 'Lunch meeting',
        start: '2021-04-21',
        end: '2021-04-22',
        className: 'bg-esg-two',
      },
      {
        title: 'All day conference',
        start: '2021-04-29',
        end: '2021-04-29',
        className: 'bg-green',
      },
      {
        title: 'Meeting with Mary',
        start: '2021-04-06',
        end: '2021-04-06',
        className: 'bg-esg-one',
      },
      {
        title: 'Winter Hackaton',
        start: '2021-05-03',
        end: '2021-05-03',
        className: 'bg-red',
      },
      {
        title: 'Digital event',
        start: '2021-05-07',
        end: '2021-05-09',
        className: 'bg-esg-six',
      },
      {
        title: 'Marketing event',
        start: '2021-05-10',
        end: '2021-05-10',
        className: 'bg-esg-eight',
      },
      {
        title: 'Dinner with Family',
        start: '2021-05-19',
        end: '2021-05-19',
        className: 'bg-red',
      },
      {
        title: 'Black Friday',
        start: '2021-05-23',
        end: '2021-05-23',
        className: 'bg-esg-one',
      },
      {
        title: 'Cyber Week',
        start: '2021-05-02',
        end: '2021-05-02',
        className: 'bg-yellow',
      },
    ],
  });
  var mYear = moment().format('YYYY'),
    mDay = moment().format('dddd, MMM D');
  $('.widget-calendar-year').html(mYear);
  $('.widget-calendar-day').html(mDay);
}
('use strict');
var DatatableBasic = (function () {
    function a(a) {
      a.on('init.dt', function () {
        $('div.dataTables_length select').removeClass(
          'custom-select custom-select-sm'
        );
      }).DataTable({
        keys: !0,
        select: { style: 'multi' },
        language: {
          paginate: {
            previous: "<i class='fas fa-angle-left'>",
            next: "<i class='fas fa-angle-right'>",
          },
        },
      });
    }
    var b = $('#datatable-basic');
    b.length && a(b);
  })(),
  DatatableButtons = (function () {
    function a(a) {
      a.on('init.dt', function () {
        $('.dt-buttons .btn')
          .removeClass('btn-secondary')
          .addClass('btn-sm btn-default');
      }).DataTable({
        lengthChange: !1,
        dom: 'Bfrtip',
        buttons: ['copy', 'print'],
        language: {
          paginate: {
            previous: "<i class='fas fa-angle-left'>",
            next: "<i class='fas fa-angle-right'>",
          },
        },
      });
    }
    var b = $('#datatable-buttons');
    b.length && a(b);
  })();
('use strict');
var Dropzones = (function () {
  function a(a) {
    var c = void 0 !== a.data('dropzone-multiple') ? !0 : !1,
      b = a.find(d),
      h = void 0,
      f = {
        url: a.data('dropzone-url'),
        thumbnailWidth: null,
        thumbnailHeight: null,
        previewsContainer: b.get(0),
        previewTemplate: b.html(),
        maxFiles: c ? null : 1,
        acceptedFiles: c ? null : 'image/*',
        init: function () {
          this.on('addedfile', function (a) {
            !c && h && this.removeFile(h);
            h = a;
          });
        },
      };
    b.html('');
    a.dropzone(f);
  }
  var b = $('[data-toggle="dropzone"]'),
    d = $('.dz-preview');
  b.length &&
    ((Dropzone.autoDiscover = !1),
    b.each(function () {
      a($(this));
    }));
})();
('use strict');
var Datepicker = (function () {
  var a = $('.datepicker');
  a.length &&
    a.each(function () {
      $(this).datepicker({ disableTouchKeyboard: !0, autoclose: !1 });
    });
})();
('use strict');
var noUiSlider = (function () {
  $('.input-slider-container')[0] &&
    $('.input-slider-container').each(function () {
      var a = $(this).find('.input-slider'),
        c = a.attr('id'),
        b = a.data('range-value-min'),
        a = a.data('range-value-max'),
        d = $(this).find('.range-slider-value'),
        k = d.attr('id'),
        d = d.data('range-value-low'),
        c = document.getElementById(c),
        l = document.getElementById(k);
      noUiSlider.create(c, {
        start: [parseInt(d)],
        connect: [!0, !1],
        range: { min: [parseInt(b)], max: [parseInt(a)] },
      });
      c.noUiSlider.on('update', function (a, c) {
        l.textContent = a[c];
      });
    });
  if ($('#input-slider-range')[0]) {
    var a = document.getElementById('input-slider-range'),
      b = document.getElementById('input-slider-range-value-low'),
      d = document.getElementById('input-slider-range-value-high'),
      c = [b, d];
    noUiSlider.create(a, {
      start: [
        parseInt(b.getAttribute('data-range-value-low')),
        parseInt(d.getAttribute('data-range-value-high')),
      ],
      connect: !0,
      range: {
        min: parseInt(a.getAttribute('data-range-value-min')),
        max: parseInt(a.getAttribute('data-range-value-max')),
      },
    });
    a.noUiSlider.on('update', function (a, b) {
      c[b].textContent = a[b];
    });
  }
})();
('use strict');
var Scrollbar = (function () {
  var a = $('.scrollbar-inner');
  a.length && a.scrollbar().scrollLock();
})();
('use strict');
var Fullcalendar = (function () {
  function a(a) {
    a.fullCalendar({
      header: { right: '', center: '', left: '' },
      buttonIcons: { prev: 'calendar--prev', next: 'calendar--next' },
      theme: !1,
      selectable: !0,
      selectHelper: !0,
      editable: !0,
      events: [
        {
          id: 1,
          title: 'Reporting uploads due',
          start: '2021-04-19',
          allDay: !0,
          className: 'bg-red',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 2,
          title: 'Internal review',
          start: '2021-04-21',
          allDay: !0,
          className: 'bg-esg-two',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 3,
          title: 'All day conference',
          start: '2021-04-29',
          allDay: !0,
          className: 'bg-esg-three',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 4,
          title: 'Risk assessment review',
          start: '2021-04-06',
          allDay: !0,
          className: 'bg-esg-one',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 5,
          title: 'Upload company reports',
          start: '2021-05-03',
          allDay: !0,
          className: 'bg-red',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 6,
          title: 'Review risk profile',
          start: '2021-05-07',
          allDay: !0,
          className: 'bg-esg-six',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 7,
          title: 'Review SASB project',
          start: '2021-05-10',
          allDay: !0,
          className: 'bg-esg-six',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 8,
          title: 'SASB report due',
          start: '2021-05-19',
          allDay: !0,
          className: 'bg-red',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 9,
          title: 'Review GRI project',
          start: '2021-05-24',
          allDay: !0,
          className: 'bg-esg-six',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
        {
          id: 10,
          title: 'GRI report due',
          start: '2021-05-28',
          allDay: !0,
          className: 'bg-red',
          description:
            'Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',
        },
      ],
      dayClick: function (a) {
        a = moment(a).toISOString();
        $('#new-event').modal('show');
        $('.new-event--title').val('');
        $('.new-event--start').val(a);
        $('.new-event--end').val(a);
      },
      viewRender: function (c) {
        a.fullCalendar('getDate').month();
        $('.fullcalendar-title').html(c.title);
      },
      eventClick: function (a, b) {
        $('#edit-event input[value=' + a.className + ']').prop('checked', !0);
        $('#edit-event').modal('show');
        $('.edit-event--id').val(a.id);
        $('.edit-event--title').val(a.title);
        $('.edit-event--description').val(a.description);
      },
    });
    $('body').on('click', '.new-event--add', function () {
      var b = $('.new-event--title').val(),
        d = {
          Stored: [],
          Job: function () {
            var a = Date.now().toString().substr(6);
            return this.Check(a) ? this.Job() : (this.Stored.push(a), a);
          },
          Check: function (a) {
            for (var b = 0; b < this.Stored.length; b++)
              if (this.Stored[b] == a) return !0;
            return !1;
          },
        };
      '' != b
        ? (a.fullCalendar(
            'renderEvent',
            {
              id: d.Job(),
              title: b,
              start: $('.new-event--start').val(),
              end: $('.new-event--end').val(),
              allDay: !0,
              className: $('.event-tag input:checked').val(),
            },
            !0
          ),
          $('.new-event--form')[0].reset(),
          $('.new-event--title')
            .closest('.form-group')
            .removeClass('has-danger'),
          $('#new-event').modal('hide'))
        : ($('.new-event--title').closest('.form-group').addClass('has-danger'),
          $('.new-event--title').focus());
    });
    $('body').on('click', '[data-calendar]', function () {
      var b = $(this).data('calendar'),
        d = $('.edit-event--id').val(),
        g = $('.edit-event--title').val(),
        h = $('.edit-event--description').val(),
        f = $('#edit-event .event-tag input:checked').val(),
        k = a.fullCalendar('clientEvents', d);
      'update' === b &&
        ('' != g
          ? ((k[0].title = g),
            (k[0].description = h),
            (k[0].className = [f]),
            console.log(f),
            a.fullCalendar('updateEvent', k[0]),
            $('#edit-event').modal('hide'))
          : ($('.edit-event--title')
              .closest('.form-group')
              .addClass('has-error'),
            $('.edit-event--title').focus()));
      'delete' === b &&
        ($('#edit-event').modal('hide'),
        setTimeout(function () {
          swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: !0,
            buttonsStyling: !1,
            confirmButtonClass: 'btn btn-danger',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonClass: 'btn btn-secondary',
          }).then(function (b) {
            b.value &&
              (a.fullCalendar('removeEvents', d),
              swal({
                title: 'Deleted!',
                text: 'The event has been deleted.',
                type: 'success',
                buttonsStyling: !1,
                confirmButtonClass: 'btn btn-primary',
              }));
          });
        }, 200));
    });
    $('body').on('click', '[data-calendar-view]', function (b) {
      b.preventDefault();
      $('[data-calendar-view]').removeClass('active');
      $(this).addClass('active');
      b = $(this).attr('data-calendar-view');
      a.fullCalendar('changeView', b);
    });
    $('body').on('click', '.fullcalendar-btn-next', function (b) {
      b.preventDefault();
      a.fullCalendar('next');
    });
    $('body').on('click', '.fullcalendar-btn-prev', function (b) {
      b.preventDefault();
      a.fullCalendar('prev');
    });
  }
  var b = $('[data-toggle="calendar"]');
  b.length && a(b);
})();
('use strict');
var VectorMap = (function () {
  var a = $('[data-toggle="vectormap"]'),
    b = {
      100: '#f6f9fc',
      200: '#e9ecef',
      300: '#dee2e6',
      400: '#ced4da',
      500: '#adb5bd',
      600: '#8898aa',
      700: '#525f7f',
      800: '#32325d',
      900: '#212529',
    };
  a.length &&
    a.each(function () {
      var a = $(this),
        c = {
          map: a.data('map'),
          zoomOnScroll: !1,
          scaleColors: ['#f00', '#0071A4'],
          normalizeFunction: 'polynomial',
          hoverOpacity: 0.7,
          hoverColor: !1,
          backgroundColor: 'transparent',
          regionStyle: {
            initial: {
              fill: b[200],
              'fill-opacity': 0.8,
              stroke: 'none',
              'stroke-width': 0,
              'stroke-opacity': 1,
            },
            hover: { fill: '#1864AD', 'fill-opacity': 0.8, cursor: 'pointer' },
            selected: { fill: '#0C4E9D' },
            selectedHover: { fill: '#1864AD' },
          },
          markerStyle: {
            initial: { fill: '#F49986', 'stroke-width': 0 },
            hover: { fill: '#0C4E9D', 'stroke-width': 0 },
          },
          markers: [
            { latLng: [41.9, 12.45], name: 'Vatican City' },
            { latLng: [43.73, 7.41], name: 'Monaco' },
            { latLng: [35.88, 14.5], name: 'Malta' },
            { latLng: [1.3, 103.8], name: 'Singapore' },
            { latLng: [40.463669, -3.74922], name: 'Spain' },
            { latLng: [46.227638, 2.213749], name: 'France' },
            { latLng: [26.02, 50.55], name: 'Bahrain' },
            { latLng: [37.09024, -95.712891], name: 'United States' },
            { latLng: [55.378052, -3.435973], name: 'United Kingdom' },
            { latLng: [20.593683, 78.962883], name: 'India' },
          ],
          series: {
            regions: [
              {
                values: {
                  AU: 23,
                  BR: 18,
                  CA: 76,
                  DE: 175,
                  FR: 159,
                  GB: 1600,
                  GE: 122,
                  IN: 150,
                  RO: 22,
                  RU: 23,
                  US: 200,
                },
                scale: [b[400], '#0C4E9D'],
                normalizeFunction: 'polynomial',
              },
            ],
          },
        };
      a.vectorMap(c);
      a.find('.jvectormap-zoomin').addClass('btn btn-sm btn-primary');
      a.find('.jvectormap-zoomout').addClass('btn btn-sm btn-primary');
    });
})();
('use strict');
var Lavalamp = (function () {
  var a = $('[data-toggle="lavalamp"]');
  a.length &&
    a.each(function () {
      $(this).lavalamp({
        setOnClick: !1,
        enableHover: !0,
        margins: !0,
        autoUpdate: !0,
        duration: 200,
      });
    });
})();
('use strict');
var SortList = (function () {
  var a = $('[data-toggle="list"]'),
    b = $('[data-sort]');
  a.length &&
    a.each(function () {
      var a = $(this),
        b = List,
        e = a.get(0),
        a = {
          valueNames: a.data('list-values'),
          listClass: a.data('list-class') ? a.data('list-class') : 'list',
        };
      new b(e, a);
    });
  b.on('click', function () {
    return !1;
  });
})();
('use strict');
var Notify = (function () {
  var a = $('[data-toggle="notify"]');
  if (a.length)
    a.on('click', function (a) {
      a.preventDefault();
      a = $(this).attr('data-placement');
      var b = $(this).attr('data-align'),
        c = $(this).attr('data-icon'),
        e = $(this).attr('data-type'),
        g = $(this).attr('data-animation-in'),
        h = $(this).attr('data-animation-out');
      $.notify(
        {
          icon: c,
          title: ' Bootstrap Notify',
          message:
            'Turning standard Bootstrap alerts into awesome notifications',
          url: '',
        },
        {
          element: 'body',
          type: e,
          allow_dismiss: !0,
          placement: { from: a, align: b },
          offset: { x: 15, y: 15 },
          spacing: 10,
          z_index: 1080,
          delay: 2500,
          timer: 25e3,
          url_target: '_blank',
          mouse_over: !1,
          animate: { enter: g, exit: h },
          template:
            '<div data-notify="container" class="alert alert-dismissible alert-{0} alert-notify" role="alert"><span class="alert-icon" data-notify="icon"></span> <div class="alert-text"</div> <span class="alert-title" data-notify="title">{1}</span> <span data-notify="message">{2}</span></div><button type="button" class="close" data-notify="dismiss" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>',
        }
      );
    });
})();
('use strict');
var OnScreen = (function () {
  function a(a) {
    a.onScreen({
      container: window,
      direction: 'vertical',
      doIn: function () {},
      doOut: function () {},
      tolerance: 200,
      throttle: 50,
      toggleClass: 'on-screen',
      debug: !1,
    });
  }
  var b = $('[data-toggle="on-screen"]');
  b.length && a(b);
})();
('use strict');
var QuillEditor = (function () {
  var a = $('[data-toggle="quill"]');
  a.length &&
    a.each(function () {
      var a = $(this),
        d = a.data('quill-placeholder');
      new Quill(a.get(0), {
        modules: {
          toolbar: [
            ['bold', 'italic'],
            ['link', 'blockquote', 'code', 'image'],
            [{ list: 'ordered' }, { list: 'bullet' }],
          ],
        },
        placeholder: d,
        theme: 'snow',
      });
    });
})();
('use strict');
var Select2 = (function () {
  var a = $('[data-toggle="select"]');
  a.length &&
    a.each(function () {
      $(this).select2({});
    });
})();
('use strict');
var Tags = (function () {
  var a = $('[data-toggle="tags"]');
  a.length &&
    a.each(function () {
      $(this).tagsinput({ tagClass: 'badge badge-primary' });
    });
})();
