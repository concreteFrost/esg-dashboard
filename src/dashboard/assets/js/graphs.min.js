//Gri Graph
var xValues = ['apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct'];

new Chart('gri-graph', {
  type: 'line',

  data: {
    label: 'Employees',
    labels: xValues,
    datasets: [
      {
        data: [0, 25, 10, 14, 34, 50, 10],
        borderColor: 'red',
        borderWidth: 2,
        tension: 0,
        fill: false,
      },
      {
        data: [0, 30, 20, 17, 29, 30, 40],
        borderColor: 'green',
        tension: 0,
        borderWidth: 2,
        fill: false,
      },
    ],
  },
  options: {
    legend: { display: false },
    label: { display: true },
  },
});

//Business Unit Graph
new Chart('business-unit-graph', {
  type: 'pie',
  data: {
    labels: ['Red', 'Blue', 'Yellow', 'Green'],
    datasets: [
      {
        data: [10, 35, 15, 30],
        backgroundColor: [
          'rgb(255, 99, 132)',
          'rgb(54, 162, 235)',
          'rgb(255, 205, 86)',
          'rgb(0, 255, 120)',
        ],
      },
    ],
    
  },
  options: {
    plugins: {
      labels: {
        // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'
        render: 'value',
        // font size, default is defaultFontSize
        fontSize: 15,
 
        // font color, can be color array for each data or function for dynamic color, default is defaultFontColor
        fontColor: '#FFFFFF',
 
        // font style, default is defaultFontStyle
        fontStyle: 'normal',
 
        // font family, default is defaultFontFamily
        fontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
 
        // draw label in arc, default is false
        // bar chart ignores this
        arc: true,
 
        // position to draw label, available value is 'default', 'border' and 'outside'
        // bar chart ignores this
        // default is 'default'
        position: 'default',
 
        // draw label even it's overlap, default is true
        // bar chart ignores this
        overlap: true,
 
        // show the real calculated percentages from the values and don't apply the additional logic to fit the percentages to 100 in total, default is false
        showActualPercentages: true,
 
        // add padding when position is `outside`
        // default is 2
        outsidePadding: 4,
 
        // add margin of text when position is `outside` or `border`
        // default is 2
        textMargin: 4
      }
    }
  }

});
